# {{ ansible_managed }}
server {
  listen 80 default_server;
  listen [::]:80 default_server;
  include /etc/nginx/includes/letsencrypt-acme-challenge.conf;
  root /usr/share/nginx/html;
  index index.html index.htm index.nginx-debian.html;
  server_name _;
  location / {
    # First attempt to serve request as file, then
    # as directory, then fall back to displaying a 404.
    try_files $uri $uri/ =404;
  }
}
server {
  listen 443 ssl default_server;
  listen [::]:443 ssl default_server;
  include /etc/nginx/includes/letsencrypt-acme-challenge.conf;

  ssl_certificate /etc/letsencrypt/live/{{ default_site_fqdn }}/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/{{ default_site_fqdn }}/privkey.pem;
  ssl_dhparam /usr/local/ssl/private/dhparams.pem;
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS';
  ssl_prefer_server_ciphers on;
  #  # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
  ## Don't enable this unless you know what it does, and what the downside will be if you have to serve plain HTTP at some point.
  #  add_header Strict-Transport-Security max-age=15768000;
  ssl_stapling on;
  ssl_stapling_verify on;
  ssl_trusted_certificate /etc/letsencrypt/live/{{ default_site_fqdn }}/chain.pem;
  # resolver 8.8.8.8; # is this needed?

  root /usr/share/nginx/html;
  index index.html index.htm index.nginx-debian.html;
  server_name _;
  location / {
    # First attempt to serve request as file, then
    # as directory, then fall back to displaying a 404.
    try_files $uri $uri/ =404;
  }
}
