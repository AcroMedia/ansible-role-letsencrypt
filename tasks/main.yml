---
- name: Check if OS is Ubuntu 16.04
  fail: msg="Server must be Ubuntu 16.04"
  when: ansible_distribution != 'Ubuntu' or ansible_distribution_version != '16.04'

- name: Run {{ letsencrypt_webserver }}.yml playbook
  include: "{{ letsencrypt_webserver }}.yml"

- name: Create the acme-challenge dir
  file: 
    path: "/var/www/letsencrypt/.well-known/acme-challenge"
    state: directory
  notify: "reload {{ letsencrypt_webserver }}"

- name: Be able to ping the challenge dir
  lineinfile: 
    dest: "/var/www/letsencrypt/.well-known/acme-challenge/ping"
    state: present
    line: pong
    create: yes

- name: Check if certbot-auto exists
  stat: path=/usr/local/bin/certbot-auto
  register: certbot_auto_file

- name: Download certbot-auto if it doesn't exist
  get_url:
    url: https://raw.githubusercontent.com/certbot/certbot/master/certbot-auto
    # checksum="sha256:0103972f4d42704ff70ac855b502718fadf161925eaa7da16455fa55737c8887"
    dest: /usr/local/bin/certbot-auto
    mode: 0755
  notify: "reload {{ letsencrypt_webserver }}"
  when: certbot_auto_file.stat.exists == false
  
- name: Automatically update certbot-auto once a month with cron
  cron: 
    name: "Update certbot-auto once a month"
    minute: "0"
    hour: "0"
    day: "1"
    job: "/usr/local/bin/certbot-auto"
  tags:
    - cron

- name: Create a destination for dhparams
  file:
    path: "/usr/local/ssl/private"
    state: directory
    mode: 0700

- name: Create dhparams.pem (can take several minutes)
  shell: umask 077 && openssl dhparam -out /usr/local/ssl/private/dhparams.pem 2048
  args:
    creates: /usr/local/ssl/private/dhparams.pem

- name: Stat the default site SSL cert
  shell: "test -e /etc/letsencrypt/live/{{ ansible_fqdn }}"
  register: default_cert_result
  changed_when: "default_cert_result.rc != 0"
  ignore_errors: true

- name: Create a cert for the default site (can take some time)
  shell: >
    certbot-auto
    --non-interactive
    --agree-tos
    --email {{ default_mail_recipient }}
    certonly
    --webroot -w /var/www/letsencrypt
    -d $(hostname -f)
  register: certbot_result
  when: "default_cert_result.rc != 0"

- name: Re-stat default site SSL cert
  shell: "test -e /etc/letsencrypt/live/{{ ansible_fqdn }}"
  register: default_cert_retest
  ignore_errors: true
  changed_when: default_cert_retest.rc != default_cert_result.rc

- name: Run {{ letsencrypt_webserver }}_default_ssl.yml playbook
  include: "{{ letsencrypt_webserver }}_default_ssl.yml"
