---
- name: Fail when nginx doesn't exist
  shell: test -x /usr/sbin/nginx
  changed_when: false

- name: Create nginx includes dir
  file:
    path: "/etc/nginx/includes"
    state: directory
  notify: reload nginx

- name: Create nginx acme-challenge conf
  template:
    src: "etc/nginx/includes/letsencrypt-acme-challenge.conf.j2"
    dest: "/etc/nginx/includes/letsencrypt-acme-challenge.conf"
    force: yes
  notify: reload nginx

- name: Grep for the acme include in default NGINX site
  shell: grep -q 'include /etc/nginx/includes/letsencrypt-acme-challenge.conf' /etc/nginx/sites-available/default
  register: acme_grep_result
  ignore_errors: true
  changed_when: false

- name: Reset default site to non-ssl version
  template:
    src: "etc/nginx/sites-available/default.pre-ssl.j2"
    dest: "{{ nginx_vhost_conf_dir }}/{{ nginx_default_vhost_filename }}"
    backup: yes
  when: acme_grep_result is defined
    and acme_grep_result.rc is defined
    and acme_grep_result.rc != 0
  notify: reload nginx

- name: Enable the default site
  file:
    path: "/etc/nginx/sites-enabled/default"
    state: "link"
    src: "{{ nginx_vhost_conf_dir }}/{{ nginx_default_vhost_filename }}"
  notify: reload nginx
  when: ansible_os_family == "Debian"
  ignore_errors: "{{ ansible_check_mode }}"

- name: Reload nginx if necessary
  meta: flush_handlers

- name: Reload nginx to install the renewed certificates
  cron:
    name: "Renew letsencrypt SSL certificates"
    minute: "{{ letsencrypt_renew_cron_minute }}"
    day: "{{ letsencrypt_renew_cron_day }}"
    hour: "{{ letsencrypt_renew_cron_hour }}"
    job: "/usr/sbin/nginx -tq && {{ service_binary }} nginx reload > /dev/null"
  tags:
    - letsencrypt_cron
